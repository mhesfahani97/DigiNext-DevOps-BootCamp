# Global settings
global
    log             127.0.0.1 local2  # Log messages to the local syslog server (127.0.0.1:514)
    
    chroot          /var/lib/haproxy  # Chroot to this directory for better security
    pidfile         /var/run/haproxy.pid  # PID file location
    maxconn         4000  # Maximum total connections
    user            haproxy  # Run as user "haproxy"
    group           haproxy  # Run as group "haproxy"
    daemon  # Run as a daemon process

# Default settings
defaults
    mode                    http  # Use HTTP mode
    log                     global  # Log messages globally
    option                  httplog  # Enable HTTP request/response logging
    option                  dontlognull  # Don't log null connections
    option http-server-close  # Enable HTTP server close mode
    option forwardfor       except 127.0.0.1/8  # Add X-Forwarded-For header, except for local connections
    option                  redispatch  # Enable session redistribution upon server failure
    retries                 3  # Number of retries before marking server as down
    timeout http-request    10s  # Timeout for HTTP requests
    timeout queue           1m   # Timeout for queueing requests
    timeout connect         10s  # Timeout for establishing connection to server
    timeout client          1m   # Timeout for client connections
    timeout server          1m   # Timeout for server connections
    timeout http-keep-alive 10s  # Timeout for keeping HTTP connections alive
    timeout check           10s  # Timeout for health checks
    maxconn                 3000  # Maximum connections for this backend

# Frontend configuration
frontend main
    bind *:80  # Listen on all available IPv4 addresses on port 80
    use_backend back_nginx  # Use the backend named "back_nginx"

# Backend configuration
backend back_nginx
    balance roundrobin  # Use round-robin load balancing algorithm
    server web1 web1:80 check  # Define servers in the backend with health checks
    server web2 web2:80 check
    server web3 web3:80 check

